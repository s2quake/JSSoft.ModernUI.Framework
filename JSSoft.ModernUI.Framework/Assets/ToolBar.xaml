<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:jmfc="clr-namespace:JSSoft.ModernUI.Framework.Controls">

    <Style x:Key="ToolBarThumb_Style" TargetType="{x:Type Thumb}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Background" Value="{StaticResource WindowBackground}" />
        <Setter Property="Foreground" Value="{StaticResource WindowText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.Background>
                                <VisualBrush TileMode="Tile" Viewport="0,0,4,4" ViewportUnits="Absolute" Viewbox="0,0,4,4" ViewboxUnits="Absolute">
                                    <VisualBrush.Visual>
                                        <Canvas>
                                            <Rectangle Fill="{TemplateBinding Foreground}" Width="1" Height="1" />
                                            <Rectangle Fill="{TemplateBinding Foreground}" Canvas.Left="2" Canvas.Top="2" Width="1" Height="1" />
                                        </Canvas>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Grid.Background>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ToolBar_Template" TargetType="{x:Type ToolBar}">
        <Grid x:Name="Grid" Margin="3,1,1,1" SnapsToDevicePixels="true">
            <Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
                <ToggleButton x:Name="OverflowButton" ClickMode="Press" FocusVisualStyle="{x:Null}" Background="Red"
                              IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{TemplateBinding HasOverflowItems}" />
                <Popup x:Name="OverflowPopup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" StaysOpen="false">
                    <Border x:Name="ToolBarSubMenuBorder" BorderThickness="1" RenderOptions.ClearTypeHint="Enabled">
                        <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" KeyboardNavigation.DirectionalNavigation="Cycle" FocusVisualStyle="{x:Null}" Focusable="true" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" WrapWidth="200" />
                    </Border>
                </Popup>
            </Grid>
            <Border x:Name="MainPanelBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                    <Thumb x:Name="ToolBarThumb" Margin="-3,-1,0,0" Padding="6,5,3,6" Width="15" Style="{StaticResource ToolBarThumb_Style}" />
                    <ContentPresenter x:Name="ToolBarHeader" ContentSource="Header" HorizontalAlignment="Center" Margin="4,0,4,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" />
                    <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </DockPanel>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsOverflowOpen" Value="true">
                <Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="false" />
            </Trigger>
            <Trigger Property="Header" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ToolBarTray.IsLocked" Value="true">
                <Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Margin" TargetName="Grid" Value="1,3,1,1" />
                <Setter Property="Height" TargetName="ToolBarThumb" Value="10" />
                <Setter Property="Width" TargetName="ToolBarThumb" Value="Auto" />
                <Setter Property="Margin" TargetName="ToolBarThumb" Value="-1,-3,0,0" />
                <Setter Property="Padding" TargetName="ToolBarThumb" Value="5,6,6,1" />
                <Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4" />
                <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2" />
                <Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top" />
                <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top" />
                <Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch" />
                <Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom" />
                <Setter Property="Placement" TargetName="OverflowPopup" Value="Right" />
                <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ToolBar_ItemContainer_Style" TargetType="{x:Type ContentPresenter}">
        <Setter Property="Content" Value="{Binding Icon}" />
        <Style.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="IconButton.xaml" />
                    <ResourceDictionary Source="Button.xaml" />
                </ResourceDictionary.MergedDictionaries>
                <Style TargetType="{x:Type jmfc:IconButton}" BasedOn="{StaticResource IToolBarItem_IconButton_Style}" />
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ToolBar_Button_Style}" />
            </ResourceDictionary>
        </Style.Resources>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsVisible}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <jmfc:ModernToolBarStyleSelector x:Key="ToolBarStyleSelector" Style="{StaticResource ToolBar_ItemContainer_Style}" />

    <Style TargetType="{x:Type ToolBar}">
        <Style.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="IconButton.xaml" />
                </ResourceDictionary.MergedDictionaries>
                <Style TargetType="{x:Type jmfc:IconButton}" BasedOn="{StaticResource ToolBar_IconButton_Style}" />
            </ResourceDictionary>
        </Style.Resources>
        <Setter Property="Background" Value="{StaticResource WindowBackground}" />
        <Setter Property="Template" Value="{StaticResource ToolBar_Template}" />
        <Setter Property="ItemContainerStyleSelector" Value="{StaticResource ToolBarStyleSelector}" />
    </Style>

</ResourceDictionary>
