<!-- Released under the MIT License.

Copyright (c) 2018 Ntreev Soft co., Ltd.
Copyright (c) 2020 Jeesu Choi

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit
persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Forked from https://github.com/NtreevSoft/Ntreev.ModernUI.Framework
Namespaces and files starting with "Ntreev" have been renamed to "JSSoft". -->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:jmfc="clr-namespace:JSSoft.ModernUI.Framework.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="FilterBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="FlagControlItem_Template" TargetType="{x:Type jmfc:FlagControlItem}">
        <Grid Margin="{TemplateBinding Margin}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <CheckBox IsChecked="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}}" />
            <ContentPresenter x:Name="Content" Grid.Column="1" Margin="5 0 0 0" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="FlagType" Value="Multiple">
                <Setter TargetName="Content" Property="TextElement.FontStyle" Value="Italic" />
            </Trigger>
            <Trigger Property="FlagType" Value="All">
                <Setter TargetName="Content" Property="TextElement.FontWeight" Value="Bold" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type jmfc:FlagControlItem}">
        <Setter Property="Margin" Value="3 2" />
        <Setter Property="Template" Value="{StaticResource FlagControlItem_Template}" />
    </Style>

    <ControlTemplate x:Key="FlagControl_Template" TargetType="{x:Type jmfc:FlagControl}">
        <Grid Name="MainGrid" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" Placement="Bottom" Margin="1"
                   IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Grid Margin="4" MinWidth="{Binding ElementName=MainGrid,Path=ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border Background="#0C000000" BorderBrush="#0F000000" BorderThickness="1" CornerRadius="2.5" Margin="-1" />
                    <Border Background="#0A000000" BorderBrush="#0C000000" BorderThickness="1" CornerRadius="2.75" Margin="-2" />

                    <Border x:Name="DropDownBorder" Background="{DynamicResource PopupBackground}" BorderBrush="{DynamicResource WindowBorderActive}"
                            BorderThickness="1" Margin="0 -1 0 0">
                        <ScrollViewer Name="DropDownScrollViewer">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Rectangle x:Name="OpaqueRect" 
                                               Height="{Binding ElementName=DropDownBorder,Path=ActualHeight}" 
                                               Width="{Binding ElementName=DropDownBorder,Path=ActualWidth}" 
                                               Fill="{Binding ElementName=DropDownBorder,Path=Background}" />
                                </Canvas>
                                <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Grid>
            </Popup>
            <ToggleButton Grid.ColumnSpan="3" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="0,0,0,10" 
                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <Path Name="Arrow" Grid.ColumnSpan="3" Margin="3 1 6 0" Fill="{TemplateBinding Foreground}"
                  Data="{DynamicResource DownArrowGeometry}" HorizontalAlignment="Right"
                  VerticalAlignment="Center" IsHitTestVisible="False" />
            <TextBlock IsHitTestVisible="False" Margin="{TemplateBinding Padding}" 
                       Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}}" />

        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="False">
                <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource InputBackgroundHover}" />
                <Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Accent}" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                <Setter TargetName="OpaqueRect" 
                        Property="Canvas.Top" 
                        Value="{Binding ElementName=DropDownScrollViewer, Path=VerticalOffset}" />
                <Setter TargetName="OpaqueRect" 
                        Property="Canvas.Left" 
                        Value="{Binding ElementName=DropDownScrollViewer, Path=HorizontalOffset}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Editable_FlagControl_Template" TargetType="{x:Type jmfc:FlagControl}">
        <Grid Name="MainGrid" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" Placement="Bottom" Margin="1"
                   IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Grid Margin="4" MinWidth="{Binding ElementName=MainGrid,Path=ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border Background="#0C000000" BorderBrush="#0F000000" BorderThickness="1" CornerRadius="2.5" Margin="-1" />
                    <Border Background="#0A000000" BorderBrush="#0C000000" BorderThickness="1" CornerRadius="2.75" Margin="-2" />

                    <Border x:Name="DropDownBorder"
                            Background="{DynamicResource PopupBackground}"
                            BorderBrush="{DynamicResource WindowBorderActive}"
                            BorderThickness="1"
                            Margin="0 -1 0 0">
                        <ScrollViewer Name="DropDownScrollViewer">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Rectangle 
                                        Name="OpaqueRect"
                                        Height="{Binding ElementName=DropDownBorder,Path=ActualHeight}" 
                                        Width="{Binding ElementName=DropDownBorder,Path=ActualWidth}" 
                                        Fill="{Binding ElementName=DropDownBorder,Path=Background}" />
                                </Canvas>
                                <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Grid>
            </Popup>
            <ToggleButton Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="0,0,0,10" 
                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <Path Name="Arrow" Grid.ColumnSpan="3" Margin="3 1 6 0" Fill="{TemplateBinding Foreground}"
                  Data="{DynamicResource DownArrowGeometry}" HorizontalAlignment="Right"
                  VerticalAlignment="Center" IsHitTestVisible="False" />
            <TextBox x:Name="PART_EditableTextBox" BorderThickness="0" Padding="2 0 0 1"
                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                     Margin="{TemplateBinding Padding}" CaretBrush="{DynamicResource InputText}"
                     Style="{StaticResource FilterBox_EditableTextBox}"
                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="False">
                <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource InputBackgroundHover}" />
                <Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Accent}" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                <Setter TargetName="OpaqueRect" 
                        Property="Canvas.Top" 
                        Value="{Binding ElementName=DropDownScrollViewer, Path=VerticalOffset}" />
                <Setter TargetName="OpaqueRect" 
                        Property="Canvas.Left" 
                        Value="{Binding ElementName=DropDownScrollViewer, Path=HorizontalOffset}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type jmfc:FlagControl}">
        <Setter Property="Foreground" Value="{DynamicResource InputText}" />
        <Setter Property="Background" Value="{DynamicResource InputBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource InputBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="7,3,8,3" />
        <Setter Property="Height" Value="23" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{StaticResource FlagControl_Template}" />
    </Style>

</ResourceDictionary>
