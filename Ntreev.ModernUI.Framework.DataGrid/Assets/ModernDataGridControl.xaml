<!--===================================================================================================================
Released under the MIT License.
    
Copyright (c) 2018 Ntreev Soft co., Ltd.

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated 
documentation files (the "Software"), to deal in the Software without restriction, including without limitation the 
rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit 
persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the 
Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR 
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR 
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
====================================================================================================================-->
<ResourceDictionary x:Class="Ntreev.ModernUI.Framework.DataGrid.Assets.ModernDataGridControl"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
                    xmlns:nmgv="clr-namespace:Ntreev.ModernUI.Framework.DataGrid.Converters"
                    xmlns:nmgc="clr-namespace:Ntreev.ModernUI.Framework.DataGrid.Controls"
                    xmlns:nmgm="clr-namespace:Ntreev.ModernUI.Framework.DataGrid.Markup"
                    xmlns:nmfc="clr-namespace:Ntreev.ModernUI.Framework.Controls;assembly=Ntreev.ModernUI.Framework"
                    xmlns:nmfv="clr-namespace:Ntreev.ModernUI.Framework.Converters;assembly=Ntreev.ModernUI.Framework"
                    xmlns:p="clr-namespace:Ntreev.ModernUI.Framework.DataGrid.Properties">

    <nmgv:IndexToForegroundBrushConverter x:Key="indexToForegroundBrushConverter" />
    <nmgv:IndexToBackgroundBrushConverter x:Key="indexToBackgroundBrushConverter" />
    
    <Pen x:Key="ConnectionLinePen" Brush="{DynamicResource WindowText}" Thickness="2" />

    <DataTemplate x:Key="ValidationErrorGlyph">
        <Image Source="/Ntreev.ModernUI.Framework;component/Images/exclamation.png" />
    </DataTemplate>

    <DataTemplate x:Key="ExpandGroupGlyph">
        <Border Width="9" Height="9" Background="Transparent">
            <Path Stretch="Fill" Fill="{DynamicResource WindowText}" 
                  Data="F1 M0,0 L9,0 9,9 0,9 0,0 z M1,1 L1,8 8,8 8,1 1,1 z M2,4 L4,4 4,2 5,2 5,4 7,4 7,5 5,5 5,7 4,7 4,5 2,5 2,4 z" />
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="CollapseGroupGlyph">
        <Border Width="9" Height="9" Background="Transparent">
            <Path Stretch="Fill" Fill="{DynamicResource WindowText}" 
                  Data="F1 M0,0 L9,0 9,9 0,9 0,0 z M1,1 L1,8 8,8 8,1 1,1 z M2,4 L7,4 7,5 2,5 z" />
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="AscendingSortGlyph">
        <Path HorizontalAlignment="Center" VerticalAlignment="Center"
              Width="8" Height="6" Margin="5,0,5,0"
              Stretch="Fill" Fill="{DynamicResource WindowText}" 
              RenderTransformOrigin="0.5,0.4"
              Data="M0,0 L1,0 0.5,1 z">
            <Path.RenderTransform>
                <RotateTransform Angle="180" />
            </Path.RenderTransform>
        </Path>
    </DataTemplate>

    <DataTemplate x:Key="DescendingSortGlyph">
        <Path HorizontalAlignment="Center" VerticalAlignment="Center"
              Width="8" Height="6" Margin="5,0,5,0"
              Stretch="Fill" Fill="{DynamicResource WindowText}" 
              RenderTransformOrigin="0.5,0.4"
              Data="M0,0 L1,0 0.5,1 z">
        </Path>
    </DataTemplate>

    <Style x:Key="TableView_Style" TargetType="{x:Type xcdg:TableView}">
        <Setter Property="RowSelectorPaneWidth" Value="50" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="ValidationErrorGlyph" Value="{StaticResource ValidationErrorGlyph}" />
        <Setter Property="ExpandGroupGlyph" Value="{StaticResource ExpandGroupGlyph}" />
        <Setter Property="CollapseGroupGlyph" Value="{StaticResource CollapseGroupGlyph}" />
        <Setter Property="AscendingSortGlyph" Value="{StaticResource AscendingSortGlyph}" />
        <Setter Property="DescendingSortGlyph" Value="{StaticResource DescendingSortGlyph}" />
        <Setter Property="VerticalGridLineBrush" Value="{DynamicResource DataGridGridLines}" />
        <Setter Property="HorizontalGridLineBrush" Value="{DynamicResource DataGridGridLines}" />
        <Setter Property="ColumnVirtualizationMode" Value="Recycling" />
        <Setter Property="VerticalGridLineThickness" Value="1" />
        <Setter Property="HorizontalGridLineThickness" Value="1" />
        <Setter Property="IsAlternatingRowStyleEnabled" Value="False" />
        <Setter Property="AllowRowResize" Value="True" />
    </Style>

    <Style TargetType="{x:Type xcdg:GroupLevelIndicator}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <EventSetter Event="Loaded" Handler="GroupLevelIndicator_IsLoaded" />
    </Style>

    <ControlTemplate x:Key="detailsExpanderButtonTemplate" TargetType="{x:Type Button}">
        <ContentPresenter Name="expanderGlyphPresenter" Content="{x:Null}" ContentTemplate="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).(xcdg:ViewBase.CollapseGroupGlyph)}" />
        <ControlTemplate.Triggers>
            <Trigger Property="xcdg:DataGridControl.HasExpandedDetails" Value="False">
                <Setter TargetName="expanderGlyphPresenter" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(xcdg:DataGridControl.DataGridContext).(xcdg:ViewBase.ExpandGroupGlyph)}" Property="ContentPresenter.ContentTemplate" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="GroupHeaderControl_ToggleButton_Template" TargetType="{x:Type ToggleButton}">
        <ContentPresenter x:Name="expanderGlyphPresenter" Content="{x:Null}">
            <ContentPresenter.ContentTemplate>
                <DataTemplate>
                    <Border Width="9" Height="9" Background="Transparent">
                        <Path Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type xcdg:GroupHeaderControl}}}" 
                              Data="F1 M0,0 L9,0 9,9 0,9 0,0 z M1,1 L1,8 8,8 8,1 1,1 z M2,4 L4,4 4,2 5,2 5,4 7,4 7,5 5,5 5,7 4,7 4,5 2,5 2,4 z" />
                    </Border>
                </DataTemplate>
            </ContentPresenter.ContentTemplate>
        </ContentPresenter>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="False">
                <Setter TargetName="expanderGlyphPresenter" Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Border Width="9" Height="9" Background="Transparent">
                                <Path Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type xcdg:GroupHeaderControl}}}" 
                                      Data="F1 M0,0 L9,0 9,9 0,9 0,0 z M1,1 L1,8 8,8 8,1 1,1 z M2,4 L7,4 7,5 2,5 z" />
                            </Border>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="GroupLevelIndicatorPane_Template" TargetType="{x:Type xcdg:GroupLevelIndicatorPane}">
        <Grid>
            <Border x:Name="horizontalBorder"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{DynamicResource DataGridGridLines}"
                    BorderThickness="0 0 0 1" />
            <Border x:Name="verticalBorder"
                    BorderBrush="{DynamicResource DataGridGridLines}"
                    Padding="{TemplateBinding Padding}"
                    BorderThickness="0 0 1 0">
                <StackPanel x:Name="PART_GroupLevelIndicatorHost" Orientation="Horizontal" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="CurrentIndicatorCount" Value="0" />
                </MultiTrigger.Conditions>
                <Setter TargetName="verticalBorder" Property="BorderThickness" Value="0 0 1 0" />
            </MultiTrigger>
            <Trigger Property="ShowVerticalBorder" Value="False">
                <Setter TargetName="verticalBorder" Property="BorderThickness" Value="0 0 1 0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type xcdg:GroupLevelIndicatorPane}">
        <Setter Property="BorderBrush" Value="{DynamicResource DataGridGridLines}" />
        <Setter Property="Template" Value="{StaticResource GroupLevelIndicatorPane_Template}" />
    </Style>

    <Style TargetType="{x:Type xcdg:GroupHeaderControl}">
        <Setter Property="BorderThickness" Value="0 0 1 1" />
        <Setter Property="BorderBrush" Value="{DynamicResource DataGridGridLines}" />
        <Setter Property="Foreground" Value="{Binding Path=Group.Level, RelativeSource={RelativeSource Self}, Converter={StaticResource indexToForegroundBrushConverter}}" />
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=Group.Level, Converter={StaticResource indexToBackgroundBrushConverter}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcdg:GroupHeaderControl}">
                    <xcdg:PassiveLayoutDecorator Axis="Horizontal">
                        <DockPanel>
                            <xcdg:HierarchicalGroupLevelIndicatorPane DockPanel.Dock="Left" />
                            <xcdg:GroupLevelIndicatorPane DockPanel.Dock="Left" Indented="False">
                                <xcdg:GroupLevelIndicatorPane.GroupLevel>
                                    <Binding ConverterParameter="-1" Path="(xcdg:GroupLevelIndicatorPane.GroupLevel)" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <xcdg:IntAdditionConverter/>
                                        </Binding.Converter>
                                    </Binding>
                                </xcdg:GroupLevelIndicatorPane.GroupLevel>
                            </xcdg:GroupLevelIndicatorPane>
                            <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" FocusVisualStyle="{TemplateBinding FocusVisualStyle}" Focusable="True" Padding="{TemplateBinding Padding}">
                                <StackPanel Orientation="Horizontal">
                                    <ToggleButton Focusable="False" IsChecked="{Binding Group.IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" OverridesDefaultStyle="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Template="{StaticResource GroupHeaderControl_ToggleButton_Template}">
                                    </ToggleButton>
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="3,0,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </StackPanel>
                            </Border>
                        </DockPanel>
                    </xcdg:PassiveLayoutDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="xcdg:DataGridControl.NavigationBehavior" Value="None">
                            <Setter Property="Focusable" TargetName="mainBorder" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Invisible_Thumb_Style" TargetType="{x:Type Thumb}">
        <Setter Property="Height" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="RowSelector_Template" TargetType="{x:Type xcdg:RowSelector}">
        <Grid>
            <Border x:Name="rootBorder" Background="{TemplateBinding Background}" 
                    BorderBrush="{DynamicResource DataGridGridLines}"
                    BorderThickness="0 0 0 1">
                <Grid>
                    <Viewbox MaxHeight="16"
                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                             HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Viewbox>
                </Grid>
            </Border>
            <Thumb x:Name="PART_RowResizerThumb" VerticalAlignment="Bottom" Style="{StaticResource Invisible_Thumb_Style}" Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundPressed}" />
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundPressed}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundHover}" />
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundHover}" />
            </Trigger>
            <Trigger Property="IsCurrent" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundCurrent}" />
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundCurrent}" />
            </Trigger>
            <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(nmgc:ModernDataGridControl.AllowHeightResize)}" Value="True">
                <Setter TargetName="PART_RowResizerThumb" Property="Visibility" Value="Visible" />
            </DataTrigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type xcdg:RowSelector}">
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="Background" Value="{DynamicResource WindowBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowText}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{DynamicResource DataGridGridLines}" />
        <Setter Property="Template" Value="{StaticResource RowSelector_Template}" />
    </Style>

    <Style x:Key="ColumnManagerRowSelector_Style" TargetType="{x:Type xcdg:RowSelector}" BasedOn="{StaticResource {x:Type xcdg:RowSelector}}">
        <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ColumnManagerRowSelector_PreviewMouseLeftButtonDown" />
    </Style>

    <Style x:Key="ModernColumnManagerRowSelector_Style" TargetType="{x:Type xcdg:RowSelector}" BasedOn="{StaticResource ColumnManagerRowSelector_Style}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(xcdg:DataGridControl.DataGridContext).(nmgc:ModernDataGridControl.IsCurrentContext)}" Value="False">
                <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundInactivated}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataRowSelector_Style" TargetType="{x:Type xcdg:RowSelector}" BasedOn="{StaticResource {x:Type xcdg:RowSelector}}">
        <Setter Property="nmgc:ModernDataRow.IsDragOver" Value="False" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(xcdg:ViewBase.IsLastItem)}" Value="True">
                <Setter Property="BorderThickness" Value="0 1 0 1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(xcdg:DataGridControl.HasExpandedDetails)}" Value="True">
                <Setter Property="BorderThickness" Value="0 1 0 1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(xcdg:Row.IsSelected)}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundCurrent}" />
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundCurrent}" />
            </DataTrigger>
            <Trigger Property="nmgc:ModernDataRow.IsDragOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowBorder}" />
            </Trigger>
            <Trigger Property="HasValidationError" Value="True">
                <Setter Property="ContentTemplate" Value="{x:Null}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(nmgc:ModernDataGridControl.HasDataContextError)}" Value="True">
                <Setter Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(xcdg:DataGridControl.DataGridContext).(xcdg:UIViewBase.ValidationErrorGlyph)}" />
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=DataContext.DataContextError}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(xcdg:DataGridControl.DataGridContext).(nmgc:ModernDataGridControl.IsCurrentContext)}" Value="False">
                <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundInactivated}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="DataRow_Template" TargetType="{x:Type nmgc:ModernDataRow}">
        <Grid x:Name="rootGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border x:Name="topBorder" Grid.Column="2" Grid.ColumnSpan="2" Margin="0 -1 0 0" xcdg:TableView.CanScrollHorizontally="False" Background="{TemplateBinding Control.Background}" 
                    BorderBrush="{DynamicResource DataGridGridLines}" BorderThickness="0 1 0 0" Padding="{TemplateBinding Control.Padding}" Visibility="Collapsed" />
            <Border x:Name="rootBorder" Grid.Column="2" Grid.ColumnSpan="2" xcdg:TableView.CanScrollHorizontally="False" Background="{TemplateBinding Control.Background}" 
                    BorderBrush="{DynamicResource DataGridGridLines}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" />
            <xcdg:HierarchicalGroupLevelIndicatorPane Grid.Column="0" xcdg:TableView.CanScrollHorizontally="False" />
            <xcdg:GroupLevelIndicatorPane x:Name="groupLevelIndicatorPane" xcdg:TableView.CanScrollHorizontally="False" Grid.Column="1" />
            <Border x:Name="detailsToggle" Grid.Column="2" Visibility="Collapsed" xcdg:TableView.CanScrollHorizontally="False" BorderBrush="{DynamicResource DataGridGridLines}" BorderThickness="0 0 0 1">
                <Button x:Name="detailsToggle_Button" VerticalAlignment="Top" Margin="2,4,2,0" OverridesDefaultStyle="True" Focusable="False" />
            </Border>
            <xcdg:FixedCellPanel x:Name="PART_CellsHost" Grid.Column="3" Margin="{TemplateBinding Control.BorderThickness}" 
                                 ColumnStretchMinWidth="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).(xcdg:FixedCellPanel.ColumnStretchMinWidth)}" 
                                 ColumnStretchMode="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).(xcdg:FixedCellPanel.ColumnStretchMode)}"
                                 FixedCellCount="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).(xcdg:FixedCellPanel.FixedCellCount), Mode=TwoWay}"
                                 FixedColumnDropMarkPen="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).(xcdg:FixedCellPanel.FixedColumnDropMarkPen)}" />
            <Border x:Name="bottomBorder" BorderThickness="0 0 0 1" xcdg:TableView.CanScrollHorizontally="False" Grid.ColumnSpan="3" 
                    BorderBrush="{TemplateBinding Control.BorderBrush}" Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsSelected}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(xcdg:DataGridControl.DataGridContext).DataGridControl.SelectionUnit}" Value="Row" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundCurrent}" />
                    <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundCurrent}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsSelected}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(xcdg:DataGridControl.DataGridContext).DataGridControl.IsKeyboardFocusWithin}" Value="True" />
                </MultiDataTrigger.Conditions>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsSelected}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(xcdg:DataGridControl.DataGridContext).DataGridControl.IsKeyboardFocusWithin}" Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(xcdg:DataGridControl.DataGridContext).DataGridControl.HideSelection}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="rootBorder" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=InactiveSelectionBackground}" Property="Border.Background" />
                <Setter TargetName="rootGrid" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=InactiveSelectionForeground}" Property="TextElement.Foreground" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(xcdg:DataGridControl.DataGridContext).HasDetails}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(xcdg:DataGridControl.DataGridContext).AllowDetailToggle}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="detailsToggle_Button" Value="{x:Static xcdg:DataGridCommands.ToggleDetailExpansion}" Property="ButtonBase.Command" />
                <Setter TargetName="detailsToggle" Property="Visibility" Value="Visible" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type nmgc:ModernDataRow}">
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Background" Value="{DynamicResource DataGridCellBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridCellForeground}" />
        <Setter Property="xcdg:RowSelector.RowSelectorStyle" Value="{StaticResource DataRowSelector_Style}" />
        <Setter Property="SelectionBackground" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="nmgc:ModernDataGridControl.AllowHeightResize" Value="True" />
        <Setter Property="Template" Value="{StaticResource DataRow_Template}" />
        <Style.Triggers>
            <Trigger Property="IsDragOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowBorder}" />
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).(nmgc:ModernDataGridControl.IsCurrentContext)}" Value="False">
                <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundInactivated}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type nmgc:ModernInsertionButton}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackground}" />
        <!--<Setter Property="xcdg:TableView.CanScrollHorizontally" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Left" />-->
        <Setter Property="Content" Value="{x:Static p:Resources.Button_InsertRow}" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderThickness" Value="1 0 1 1" />
        <Setter Property="Focusable" Value="False" />
    </Style>

    <ControlTemplate x:Key="ModernInsertionRow_Template" TargetType="{x:Type nmgc:ModernInsertionRow}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <nmfc:IconButton x:Name="PART_InsertManyButton" Focusable="False" Grid.Column="0" Command="{TemplateBinding InsertManyCommand}"
                             Source="/Ntreev.ModernUI.Framework.DataGrid;component/Images/clipboard.png" />
            <nmgc:ModernInsertionButton x:Name="PART_InsertButton" Grid.Column="1" Command="{TemplateBinding InsertCommand}" />
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type nmgc:ModernInsertionRow}">
        <Setter Property="xcdg:TableView.CanScrollHorizontally" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <!--<Setter Property="Width" Value="{Binding (xcdg:DataGridControl.DataGridContext).(nmgc:ModernColumnManagerRow.ColumnsWidth), RelativeSource={RelativeSource Self}}" />-->
        <Setter Property="Template" Value="{StaticResource ModernInsertionRow_Template}"/>
    </Style>

    <ControlTemplate x:Key="Cell_Template" TargetType="{x:Type xcdg:Cell}">
        <Grid>
            <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                    BorderBrush="{DynamicResource DataGridGridLines}" BorderThickness="0 0 0 1">
                <xcdg:CellContentPresenter x:Name="PART_CellContentPresenter" 
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <Image x:Name="error_Image" Source="/Ntreev.ModernUI.Framework;component/Images/exclamation.png" HorizontalAlignment="Right" VerticalAlignment="Center" 
                   Stretch="None" Margin="5 0" Visibility="Hidden" />
            <Border x:Name="verticalGridLineBorder"
                    BorderBrush="{DynamicResource DataGridGridLines}"
                    BorderThickness="0 0 1 0" />
            <Border x:Name="InnerBorder" BorderThickness="1" BorderBrush="#8597bc" Visibility="Hidden" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsCurrent" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundSelected}" />
                    <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundSelected}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(xcdg:DataGridControl.DataGridContext).DataGridControl.SelectionUnit, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                               Value="Cell" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ParentRow.IsSelected}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundSelected}" />
                    <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundSelected}" />
                    <Setter TargetName="InnerBorder" Property="Visibility" Value="Hidden" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundHover}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundHover}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundSelected}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundSelected}" />
                <Setter TargetName="InnerBorder" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsCurrent" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundCurrent}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundCurrent}" />
                <Setter TargetName="InnerBorder" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsBeingEdited" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridCellForeground}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(nmgc:ModernDataGridControl.HasDataContextError), RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                <Setter TargetName="error_Image" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style TargetType="{x:Type xcdg:Cell}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="BorderBrush" Value="{DynamicResource DataGridGridLines}" />
        <Setter Property="CellErrorStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="5 2" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{StaticResource Cell_Template}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(nmgc:ModernDataGridControl.HasDataContextError)}" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(nmgc:ModernDataGridControl.DataContextError)}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <nmfv:ContentToStringConverter x:Key="contentToStringConverter" />

    <DataTemplate x:Key="ModernDataCell_ContentTemplate">
        <TextBlock x:Name="textBlock" Text="{Binding Converter={StaticResource contentToStringConverter}}" nmfc:TextBlockService.ShowTrimmedText="True">
        </TextBlock>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(nmfc:TextBlockService.IsTextTrimmed), ElementName=textBlock}" Value="True">
                <Setter TargetName="textBlock" Property="ToolTip" Value="{Binding Path=Text, ElementName=textBlock}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <nmgc:ModernDataCellContentTemplateSelector x:Key="ModernDataCell_ContentTemplateSelector" />

    <Style TargetType="{x:Type nmgc:ModernDataCell}" BasedOn="{StaticResource {x:Type xcdg:Cell}}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ContentTemplateSelector" Value="{StaticResource ModernDataCell_ContentTemplateSelector}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ParentColumn.CellContentTemplate, RelativeSource={RelativeSource Mode=Self}}" Value="{x:Null}">
                <Setter Property="ContentTemplate" Value="{StaticResource ModernDataCell_ContentTemplate}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ParentColumn.CellContentTemplate, RelativeSource={RelativeSource Mode=Self}}" Value="{x:Null}" />
                    <Condition Binding="{Binding Path=(xcdg:DataGridControl.DataGridContext).DataGridControl.(nmgc:ModernDataGridControl.HasSearchText), RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <nmfc:HighlightTextBlock x:Name="htb" Text="{Binding Converter={StaticResource contentToStringConverter}}" Highlight="{DynamicResource WindowBorder}"
                                                     Pattern="{Binding SearchText, RelativeSource={RelativeSource AncestorType={x:Type nmgc:ModernDataGridControl}}}" />
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsCurrent, RelativeSource={RelativeSource AncestorType={x:Type nmgc:ModernDataCell}}}" Value="True">
                                    <Setter TargetName="htb" Property="Highlight" Value="{DynamicResource WindowBackground}" />
                                    <Setter TargetName="htb" Property="Foreground" Value="{DynamicResource WindowText}" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
            <Trigger Property="HasValidationError" Value="True">
                <Setter Property="CellErrorStyle" Value="{x:Null}" />
            </Trigger>
            <Trigger Property="HasValidationError" Value="True">
                <Setter Property="ToolTip" Value="{Binding Path=ValidationError.ErrorContent, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type xcdg:ColumnManagerRow}">
        <Setter Property="AllowSort" Value="False" />
        <Setter Property="Height" Value="23" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForeground}" />
        <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackground}" />
        <Setter Property="xcdg:RowSelector.RowSelectorStyle" Value="{StaticResource ColumnManagerRowSelector_Style}" />
        <Setter Property="xcdg:RowSelector.Visible" Value="True" />
        <Setter Property="nmgc:ModernDataGridControl.AllowHeightResize" Value="False" />
    </Style>  

    <ControlTemplate x:Key="ModernColumnManagerRow_Template" TargetType="{x:Type nmgc:ModernColumnManagerRow}">
        <Grid Name="rootGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border Name="rootBorder" Grid.Column="1" Grid.ColumnSpan="3" xcdg:TableView.CanScrollHorizontally="False" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" />
            <xcdg:HierarchicalGroupLevelIndicatorPane xcdg:TableView.CanScrollHorizontally="False" Grid.Column="0" Background="{TemplateBinding Control.Background}" />
            <xcdg:GroupLevelIndicatorPane x:Name="groupLevelIndicatorPane" xcdg:TableView.CanScrollHorizontally="False" Grid.Column="1" Background="{TemplateBinding Control.Background}" />
            <ContentPresenter Name="detailsToggle" Grid.Column="2" VerticalAlignment="Top" Margin="2,4,2,0" OverridesDefaultStyle="True" Focusable="False" Visibility="Collapsed" 
                              xcdg:TableView.CanScrollHorizontally="False" Content="{x:Null}" 
                              ContentTemplate="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).(xcdg:ViewBase.ExpandGroupGlyph)}" />
            <Border BorderThickness="0 0 0 1" BorderBrush="{DynamicResource DataGridGridLines}" Grid.Column="2" />
            <Decorator Name="indentationDecorator" Grid.Column="3">
                <xcdg:FixedCellPanel x:Name="PART_CellsHost" Margin="{TemplateBinding Control.BorderThickness}" 
                                     ColumnStretchMinWidth="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).(xcdg:FixedCellPanel.ColumnStretchMinWidth)}" 
                                     ColumnStretchMode="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).(xcdg:FixedCellPanel.ColumnStretchMode)}" 
                                     FixedCellCount="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).(xcdg:FixedCellPanel.FixedCellCount), Mode=TwoWay}" 
                                     FixedColumnDropMarkPen="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).(xcdg:FixedCellPanel.FixedColumnDropMarkPen)}" />
            </Decorator>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(xcdg:DataGridControl.DataGridContext).HasDetails}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(xcdg:DataGridControl.DataGridContext).AllowDetailToggle}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="detailsToggle" Property="UIElement.Visibility" Value="Hidden" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type nmgc:ModernColumnManagerRow}" BasedOn="{StaticResource {x:Type xcdg:ColumnManagerRow}}">
        <Setter Property="Template" Value="{DynamicResource ModernColumnManagerRow_Template}" />
        <Setter Property="xcdg:RowSelector.RowSelectorStyle" Value="{StaticResource ModernColumnManagerRowSelector_Style}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(xcdg:DataGridControl.DataGridContext).(nmgc:ModernDataGridControl.IsCurrentContext)}" Value="False">
                <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundInactivated}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="invisibleThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="ColumnManagerCell_Template" TargetType="{x:Type xcdg:ColumnManagerCell}">
        <Grid>
            <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{DynamicResource DataGridGridLines}" 
                                BorderThickness="0 0 0 1" 
                                Padding ="{TemplateBinding Padding}">
                <Grid x:Name="containerGrid" Margin="5 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter Grid.Column="0"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    <Path x:Name="SortArrow"
                          Grid.Column="1"
                          HorizontalAlignment="Center" VerticalAlignment="Center"
                          Width="8" Height="6" Margin="5,0,5,0"
                          Stretch="Fill" Opacity="0.5" Fill="{TemplateBinding Foreground}"
                          RenderTransformOrigin="0.5,0.4"
                          Visibility="Collapsed"
                          Data="M0,0 L1,0 0.5,1 z" />
                </Grid>
            </Border>
            <Thumb x:Name="PART_ColumnResizerThumb" HorizontalAlignment="Right" Style="{StaticResource invisibleThumbStyle}" />
            <Border x:Name="verticalGridLineBorder" BorderBrush="{DynamicResource DataGridGridLines}" BorderThickness="0 0 1 0" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ParentColumn.HasFixedWidth}" Value="True">
                <Setter TargetName="PART_ColumnResizerThumb" Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ParentRow.AllowColumnResize}" Value="False">
                <Setter TargetName="PART_ColumnResizerThumb" Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ParentColumn.SortDirection}" Value="Ascending">
                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                <Setter TargetName="SortArrow" Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="180" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ParentColumn.SortDirection}" Value="Descending">
                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type xcdg:ColumnManagerCell}">
        <EventSetter Event="MouseLeftButtonUp" Handler="ColumnManagerCell_MouseLeftButtonUp" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForeground}" />
        <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackground}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{StaticResource ColumnManagerCell_Template}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundHover}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundHover}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundPressed}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundPressed}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type nmgc:ModernColumnManagerCell}" BasedOn="{StaticResource {x:Type xcdg:ColumnManagerCell}}">
        <Style.Triggers>
            <Trigger Property="HasSelected" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundSelected}" />
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundSelected}" />
            </Trigger>
            <Trigger Property="IsCurrentColumn" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundCurrent}" />
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundCurrent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type nmgc:ModernScrollBar}" BasedOn="{StaticResource {x:Type ScrollBar}}" />

    <ControlTemplate x:Key="ModernScrollBar_Vertical_Template" TargetType="{x:Type nmgc:ModernScrollBar}">
        <Grid Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
            </Grid.RowDefinitions>
            <RepeatButton Style="{StaticResource ScrollBarButton}"
                          IsEnabled="{TemplateBinding IsMouseOver}"
                          Command="{x:Static ScrollBar.LineUpCommand}"
                          Margin="0,0,0,-1">
                <Path Width="7" Height="4" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}" Data="M 0 4 L 3.5 0 L 7 4 Z" />
            </RepeatButton>
            <Track Grid.Row="1" Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageUpCommand}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageDownCommand}" />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Padding="4,0" />
                </Track.Thumb>
            </Track>
            <nmgc:ModernSearchedItems Grid.Row="1" LineBrush="{DynamicResource WindowBorderActive}" IsHitTestVisible="False"
                                      ScrollBar="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
            <nmgc:ModernCurrentItemElement Grid.Row="1" LineBrush="{DynamicResource WindowText}" IsHitTestVisible="False"
                                           ScrollBar="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
            <RepeatButton Style="{StaticResource ScrollBarButton}" Margin="0,-1,0,0"
                          Grid.Row="2" IsEnabled="{TemplateBinding IsMouseOver}"
                          Command="{x:Static ScrollBar.LineDownCommand}">
                <Path Width="7" Height="4" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}" Data="M 0 0 L 3.5 4 L 7 0 Z" />
            </RepeatButton>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ModernScrollBar_Horintal_Template"  TargetType="{x:Type ScrollBar}">
        <Grid Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
            </Grid.ColumnDefinitions>
            <RepeatButton Style="{StaticResource ScrollBarButton}"
                          IsEnabled="{TemplateBinding IsMouseOver}"
                          Command="{x:Static ScrollBar.LineLeftCommand}" 
                          Margin="0,0,-1,0">
                <Path Width="4" Height="7" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}" Data="M 0 3.5 L 4 7 L 4 0 Z" />
            </RepeatButton>
            <Track Grid.Column="1" Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageLeftCommand}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageRightCommand}" />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Padding="0,4" />
                </Track.Thumb>
            </Track>
            <RepeatButton Style="{StaticResource ScrollBarButton}"
                          Grid.Column="2"
                          IsEnabled="{TemplateBinding IsMouseOver}"
                          Command="{x:Static ScrollBar.LineRightCommand}"
                          Margin="-1,0,0,0">
                <Path Width="4" Height="7" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}" Data="M 0 0 L 0 7 L 4 3.5 Z" />
            </RepeatButton>
        </Grid>
    </ControlTemplate>

    <Style x:Key="FilterableScrollBar_Style" TargetType="{x:Type nmgc:ModernScrollBar}" BasedOn="{StaticResource {x:Type nmgc:ModernScrollBar}}">
        <Setter Property="Template" Value="{StaticResource ModernScrollBar_Vertical_Template}" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="Template" Value="{StaticResource ModernScrollBar_Horintal_Template}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="ModernTableViewScrollViewer_Template" TargetType="{x:Type nmgc:ModernTableViewScrollViewer}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="gc1" />
                <ColumnDefinition x:Name="gc2" Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition x:Name="gr1" />
                <RowDefinition x:Name="gr2" Height="Auto" />
            </Grid.RowDefinitions>
            <Grid x:Name="contentGrid" Margin="{TemplateBinding Padding}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <xcdg:RowSelectorPane x:Name="PART_RowSelectorPane" Grid.Column="0" Grid.Row="0" Grid.RowSpan="3"
                                      Background="Red" Width="{TemplateBinding RowSelectorPaneWidth}" />
                <xcdg:SynchronizedScrollViewer x:Name="fixedHeaderScrollViewer" Grid.Column="1" Grid.Row="0"
                                               xcdg:TableViewScrollViewer.SynchronizedScrollViewerPosition="Top"
                                               Focusable="False">
                    <xcdg:TableViewHeaderFooterPanel xcdg:DataGridControl.IsFixedHeadersHost="True"
                                                     Orientation="Vertical"
                                                     HorizontalAlignment="Stretch" />
                </xcdg:SynchronizedScrollViewer>
                <xcdg:SynchronizedScrollViewer x:Name="fixedFooterScrollViewer" Grid.Column="1" Grid.Row="2"
                                               xcdg:TableViewScrollViewer.SynchronizedScrollViewerPosition="Bottom"
                                               Focusable="False">
                    <xcdg:TableViewHeaderFooterPanel xcdg:DataGridControl.IsFixedFootersHost="True"
                                                     Orientation="Vertical" HorizontalAlignment="Left" />
                </xcdg:SynchronizedScrollViewer>
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Column="1" Grid.Row="1"
                                        CanContentScroll="{TemplateBinding CanContentScroll}" />
            </Grid>
            <nmgc:ModernScrollBar x:Name="PART_HorizontalScrollBar"
                                  Style="{StaticResource FilterableScrollBar_Style}"
                                  Grid.Column="0"
                                  Grid.Row="1"
                                  Orientation="Horizontal"
                                  Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
                                  Value="{TemplateBinding ScrollViewer.HorizontalOffset}"
                                  ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                                  Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" />
            <nmgc:ModernScrollBar x:Name="PART_VerticalScrollBar"
                                  Style="{StaticResource FilterableScrollBar_Style}"
                                  Grid.Column="1"
                                  Grid.Row="0"
                                  Orientation="Vertical"
                                  Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                                  Value="{TemplateBinding ScrollViewer.VerticalOffset}"
                                  ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                                  Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" />
            <xcdg:ScrollTip Visibility="Collapsed" Content="{x:Null}"
                            ContentTemplate="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).(xcdg:UIViewBase.ScrollTipContentTemplate)}"
                            ContentTemplateSelector="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).(xcdg:UIViewBase.ScrollTipContentTemplateSelector)}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ShowRowSelectorPane" Value="False">
                <Setter TargetName="PART_RowSelectorPane" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <DataTrigger Binding="{Binding IsVerticalScrollBarOnLeftSide, RelativeSource={RelativeSource AncestorType={x:Type nmgc:ModernDataGridControl}}}" Value="True">
                <Setter TargetName="gc1" Property="Width" Value="auto" />
                <Setter TargetName="gc2" Property="Width" Value="*" />
                <Setter TargetName="contentGrid" Property="Grid.Column" Value="1" />
                <Setter TargetName="PART_HorizontalScrollBar" Property="Grid.Column" Value="1" />
                <Setter TargetName="PART_VerticalScrollBar" Property="Grid.Column" Value="0" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ModernTableViewScrollViewer_Style" TargetType="{x:Type nmgc:ModernTableViewScrollViewer}" BasedOn="{StaticResource {x:Type xcdg:TableViewScrollViewer}}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ShowRowSelectorPane" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(xcdg:DataGridControl.DataGridContext).(xcdg:TableViewScrollViewer.ShowRowSelectorPane)}" />
        <Setter Property="RowSelectorPaneWidth" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(xcdg:DataGridControl.DataGridContext).(xcdg:TableViewScrollViewer.RowSelectorPaneWidth)}" />
        <Setter Property="Template" Value="{StaticResource ModernTableViewScrollViewer_Template}" />
    </Style>

    <ControlTemplate x:Key="ModernDataGridControl_Template" TargetType="{x:Type nmgc:ModernDataGridControl}">
        <Grid>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <AdornerDecorator x:Name="PART_DragDropAdornerDecorator">
                    <nmgc:ModernTableViewScrollViewer x:Name="PART_ScrollViewer" Padding="{TemplateBinding Padding}" Style="{StaticResource ModernTableViewScrollViewer_Style}">
                        <nmgc:ModernTableViewItemsHost />
                    </nmgc:ModernTableViewScrollViewer>
                </AdornerDecorator>
            </Border>
            <Grid x:Name="connectionStateGrid" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,25,25" Height="30" Width="30">
                <ContentPresenter x:Name="connectionStateLoadingContentPresenter"
                                  ContentTemplate="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).(xcdg:UIViewBase.ConnectionStateLoadingGlyph)}"
                                  Content="{TemplateBinding ConnectionState}"
                                  Visibility="Collapsed" />
                <ContentPresenter x:Name="connectionStateCommittingContentPresenter"
                                  ContentTemplate="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).(xcdg:UIViewBase.ConnectionStateCommittingGlyph)}"
                                  Content="{TemplateBinding ConnectionState}"
                                  Visibility="Collapsed" />
                <ContentPresenter x:Name="connectionStateErrorContentPresenter"
                                  ContentTemplate="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).(xcdg:UIViewBase.ConnectionStateErrorGlyph)}"
                                  Content="{TemplateBinding ConnectionState}"
                                  Visibility="Collapsed" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(xcdg:DataGridControl.DataGridContext).(xcdg:UIViewBase.IsConnectionStateGlyphEnabled)}" Value="False">
                <Setter TargetName="connectionStateGrid" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(xcdg:DataGridControl.DataGridContext).DataGridControl.ConnectionState}" Value="Loading">
                <Setter TargetName="connectionStateLoadingContentPresenter" Property="Visibility" Value="Visible" />
                <Setter TargetName="connectionStateErrorContentPresenter" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="connectionStateCommittingContentPresenter" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(xcdg:DataGridControl.DataGridContext).DataGridControl.ConnectionState}" Value="Committing">
                <Setter TargetName="connectionStateLoadingContentPresenter" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="connectionStateErrorContentPresenter" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="connectionStateCommittingContentPresenter" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(xcdg:DataGridControl.DataGridContext).DataGridControl.ConnectionState}" Value="Error">
                <Setter TargetName="connectionStateLoadingContentPresenter" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="connectionStateErrorContentPresenter" Property="Visibility" Value="Visible" />
                <Setter TargetName="connectionStateCommittingContentPresenter" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type nmgc:ModernDataGridControl}">
        <Setter Property="Background" Value="{DynamicResource WindowBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowText}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource SeparatorBackground}" />
        <Setter Property="UpdateSourceTrigger" Value="CellEndingEdit" />
        <Setter Property="CellEditorDisplayConditions" Value="CellIsCurrent" />
        <Setter Property="ItemScrollingBehavior" Value="Immediate" />
        <Setter Property="SelectionMode" Value="Extended" />
        <Setter Property="SelectionUnit" Value="Cell" />
        <Setter Property="Template" Value="{StaticResource ModernDataGridControl_Template}" />
    </Style>

    <Style TargetType="{x:Type xcdg:HierarchicalGroupByControl}">
        <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForeground}" />
        <Setter Property="BorderThickness" Value="1 0 0 1" />
        <Setter Property="BorderBrush" Value="{DynamicResource DataGridGridLines}" />
        <Setter Property="StairHeight" Value="0" />
        <Setter Property="ConnectionLineOffset" Value="0" />
        <Setter Property="ConnectionLineAlignment" Value="CenterToCenter" />
        <Setter Property="xcdg:RowSelector.Visible" Value="True" />
        <Setter Property="xcdg:TableView.CanScrollHorizontally" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcdg:HierarchicalGroupByControl}">
                    <Grid x:Name="rootGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="rootBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.Column="1" Padding="{TemplateBinding Padding}">
                        </Border>
                        <xcdg:HierarchicalGroupLevelIndicatorPane Grid.Column="0" />
                        <xcdg:GroupLevelIndicatorPane x:Name="groupLevelIndicatorPane" Grid.Column="1" />
                        <xcdg:GroupByControl AllowSort="{TemplateBinding AllowSort}" AllowGroupingModification="{TemplateBinding AllowGroupingModification}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" xcdg:TableView.CanScrollHorizontally="True" ConnectionLinePen="{TemplateBinding ConnectionLinePen}" Grid.Column="2" NoGroupContent="{TemplateBinding NoGroupContent}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(xcdg:GroupLevelIndicatorPane.GroupLevel), RelativeSource={RelativeSource TemplatedParent}}" Value="-1">
                            <Setter Property="Visibility" TargetName="groupLevelIndicatorPane" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <nmgv:GroupByItemToSortDirectionConverter x:Key="groupByItemToSortDirectionConverter" />

    <ControlTemplate x:Key="GroupByItem_Template" TargetType="{x:Type xcdg:GroupByItem}">
        <Border x:Name="outerBorder" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
                Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}">
            <StackPanel x:Name="contentPanel" Orientation="Horizontal">
                <TextBlock Text="{Binding Title}" />
                <ContentPresenter x:Name="sortGlyphPresenter" Content="{x:Null}" Margin="6,0,0,0" Visibility="Hidden"
                                 ContentTemplate="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).(xcdg:ViewBase.AscendingSortGlyph)}" />
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="outerBorder" Property="BorderBrush" Value="{DynamicResource ButtonBorderHover}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="outerBorder" Property="BorderBrush" Value="{DynamicResource ButtonBorderPressed}" />
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource groupByItemToSortDirectionConverter}}" Value="Ascending">
                <Setter TargetName="sortGlyphPresenter" Property="ContentPresenter.ContentTemplate"
                        Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(xcdg:DataGridControl.DataGridContext).(xcdg:ViewBase.AscendingSortGlyph)}" />
                <Setter TargetName="sortGlyphPresenter" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource groupByItemToSortDirectionConverter}}" Value="Descending">
                <Setter TargetName="sortGlyphPresenter" Property="ContentPresenter.ContentTemplate"
                        Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(xcdg:DataGridControl.DataGridContext).(xcdg:ViewBase.DescendingSortGlyph)}" />
                <Setter TargetName="sortGlyphPresenter" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type xcdg:GroupByItem}">
        <Setter Property="Background" Value="{Binding Path=(nmgc:ModernDataGridControl.GroupIndex), Converter={StaticResource indexToBackgroundBrushConverter}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource ItemBorder}" />
        <Setter Property="Padding" Value="5 3" />
        <!--<Setter Property="Template" Value="{StaticResource GroupByItem_Template}" />-->
    </Style>

    <Style TargetType="{x:Type xcdg:GroupByControl}">
        <Setter Property="Foreground" Value="{DynamicResource ItemText}" />
        <Setter Property="ConnectionLinePen" Value="{StaticResource ConnectionLinePen}" />
    </Style>

    <Style TargetType="{x:Type xcdg:SynchronizedScrollViewer}">
        <EventSetter Event="ScrollChanged" Handler="SynchronizedScrollViewer_ScrollChanged" />
    </Style>

    <xcdg:CellEditor x:Key="System.Boolean">
        <xcdg:CellEditor.EditTemplate>
            <DataTemplate>
                <CheckBox Margin="0" Padding="0" BorderThickness="0" Background="Transparent"
                          Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type xcdg:Cell}}}"
                          Checked="CheckBox_Checked"
                          Unchecked="CheckBox_Unchecked"
                          IsChecked="{nmgm:EditingContentBinding}" />
            </DataTemplate>
        </xcdg:CellEditor.EditTemplate>
        <xcdg:CellEditor.ActivationGestures>
            <xcdg:KeyActivationGesture Key="Space" />
        </xcdg:CellEditor.ActivationGestures>
    </xcdg:CellEditor>

    <xcdg:CellEditor x:Key="System.String">
        <xcdg:CellEditor.EditTemplate>
            <DataTemplate>
                <nmgc:ModernDataCellTextBox Margin="-2 0" Padding="0" BorderThickness="0" Background="Transparent" 
                                            PreviewKeyDown="StringTextBox_KeyDown"
                                            Tag="{Binding ParentRow, RelativeSource={RelativeSource AncestorType={x:Type xcdg:Cell}}}"
                                            Text="{nmgm:EditingContentBinding}">
                </nmgc:ModernDataCellTextBox>
            </DataTemplate>
        </xcdg:CellEditor.EditTemplate>
        <xcdg:CellEditor.ActivationGestures>
            <xcdg:TextInputActivationGesture />
        </xcdg:CellEditor.ActivationGestures>
    </xcdg:CellEditor>

    <xcdg:CellEditor x:Key="System.Single">
        <xcdg:CellEditor.EditTemplate>
            <DataTemplate>
                <nmgc:NumericTextBox Margin="-2 0" Padding="0" BorderThickness="0" Background="Transparent"
                                     NumberStyles="Float"
                                     Tag="{Binding ParentRow, RelativeSource={RelativeSource AncestorType={x:Type xcdg:Cell}}}"
                                     Text="{nmgm:EditingContentBinding StringFormat=R}">
                </nmgc:NumericTextBox>
            </DataTemplate>
        </xcdg:CellEditor.EditTemplate>
        <xcdg:CellEditor.ActivationGestures>
            <xcdg:TextInputActivationGesture />
        </xcdg:CellEditor.ActivationGestures>
    </xcdg:CellEditor>

    <xcdg:CellEditor x:Key="System.Double">
        <xcdg:CellEditor.EditTemplate>
            <DataTemplate>
                <nmgc:NumericTextBox Margin="-2 0" Padding="0" BorderThickness="0" Background="Transparent"
                                     NumberStyles="Float"
                                     Tag="{Binding ParentRow, RelativeSource={RelativeSource AncestorType={x:Type xcdg:Cell}}}"
                                     Text="{nmgm:EditingContentBinding StringFormat=R}">
                </nmgc:NumericTextBox>
            </DataTemplate>
        </xcdg:CellEditor.EditTemplate>
        <xcdg:CellEditor.ActivationGestures>
            <xcdg:TextInputActivationGesture />
        </xcdg:CellEditor.ActivationGestures>
    </xcdg:CellEditor>

    <xcdg:CellEditor x:Key="System.SByte">
        <xcdg:CellEditor.EditTemplate>
            <DataTemplate>
                <nmgc:NumericTextBox Margin="-2 0" Padding="0" BorderThickness="0"  Background="Transparent"
                                     NumberStyles="Integer"
                                     Tag="{Binding ParentRow, RelativeSource={RelativeSource AncestorType={x:Type xcdg:Cell}}}"
                                     Text="{nmgm:EditingContentBinding}">
                </nmgc:NumericTextBox>
            </DataTemplate>
        </xcdg:CellEditor.EditTemplate>
        <xcdg:CellEditor.ActivationGestures>
            <xcdg:TextInputActivationGesture />
        </xcdg:CellEditor.ActivationGestures>
    </xcdg:CellEditor>

    <xcdg:CellEditor x:Key="System.Byte">
        <xcdg:CellEditor.EditTemplate>
            <DataTemplate>
                <nmgc:NumericTextBox Margin="-2 0" Padding="0" BorderThickness="0"  Background="Transparent"
                                     NumberStyles="Integer"
                                     Tag="{Binding ParentRow, RelativeSource={RelativeSource AncestorType={x:Type xcdg:Cell}}}"
                                     Text="{nmgm:EditingContentBinding}">
                </nmgc:NumericTextBox>
            </DataTemplate>
        </xcdg:CellEditor.EditTemplate>
        <xcdg:CellEditor.ActivationGestures>
            <xcdg:TextInputActivationGesture />
        </xcdg:CellEditor.ActivationGestures>
    </xcdg:CellEditor>

    <xcdg:CellEditor x:Key="System.Int16">
        <xcdg:CellEditor.EditTemplate>
            <DataTemplate>
                <nmgc:NumericTextBox Margin="-2 0" Padding="0" BorderThickness="0"  Background="Transparent"
                                     NumberStyles="Integer"
                                     Tag="{Binding ParentRow, RelativeSource={RelativeSource AncestorType={x:Type xcdg:Cell}}}"
                                     Text="{nmgm:EditingContentBinding}">
                </nmgc:NumericTextBox>
            </DataTemplate>
        </xcdg:CellEditor.EditTemplate>
        <xcdg:CellEditor.ActivationGestures>
            <xcdg:TextInputActivationGesture />
        </xcdg:CellEditor.ActivationGestures>
    </xcdg:CellEditor>

    <xcdg:CellEditor x:Key="System.UInt16">
        <xcdg:CellEditor.EditTemplate>
            <DataTemplate>
                <nmgc:NumericTextBox Margin="-2 0" Padding="0" BorderThickness="0"  Background="Transparent"
                                     NumberStyles="Integer"
                                     Tag="{Binding ParentRow, RelativeSource={RelativeSource AncestorType={x:Type xcdg:Cell}}}"
                                     Text="{nmgm:EditingContentBinding}">
                </nmgc:NumericTextBox>
            </DataTemplate>
        </xcdg:CellEditor.EditTemplate>
        <xcdg:CellEditor.ActivationGestures>
            <xcdg:TextInputActivationGesture />
        </xcdg:CellEditor.ActivationGestures>
    </xcdg:CellEditor>

    <xcdg:CellEditor x:Key="System.Int32">
        <xcdg:CellEditor.EditTemplate>
            <DataTemplate>
                <nmgc:NumericTextBox Margin="-2 0" Padding="0" BorderThickness="0" Background="Transparent"
                                     NumberStyles="Integer"
                                     Tag="{Binding ParentRow, RelativeSource={RelativeSource AncestorType={x:Type xcdg:Cell}}}"
                                     Text="{nmgm:EditingContentBinding}">
                </nmgc:NumericTextBox>
            </DataTemplate>
        </xcdg:CellEditor.EditTemplate>
        <xcdg:CellEditor.ActivationGestures>
            <xcdg:TextInputActivationGesture />
        </xcdg:CellEditor.ActivationGestures>
    </xcdg:CellEditor>

    <xcdg:CellEditor x:Key="System.UInt32">
        <xcdg:CellEditor.EditTemplate>
            <DataTemplate>
                <nmgc:NumericTextBox Margin="-2 0" Padding="0" BorderThickness="0" Background="Transparent"
                                     NumberStyles="Integer"
                                     Tag="{Binding ParentRow, RelativeSource={RelativeSource AncestorType={x:Type xcdg:Cell}}}"
                                     Text="{nmgm:EditingContentBinding}">
                </nmgc:NumericTextBox>
            </DataTemplate>
        </xcdg:CellEditor.EditTemplate>
        <xcdg:CellEditor.ActivationGestures>
            <xcdg:TextInputActivationGesture />
        </xcdg:CellEditor.ActivationGestures>
    </xcdg:CellEditor>

    <xcdg:CellEditor x:Key="System.Int64">
        <xcdg:CellEditor.EditTemplate>
            <DataTemplate>
                <nmgc:NumericTextBox Margin="-2 0" Padding="0" BorderThickness="0"  Background="Transparent"
                                     NumberStyles="Integer"
                                     Tag="{Binding ParentRow, RelativeSource={RelativeSource AncestorType={x:Type xcdg:Cell}}}"
                                     Text="{nmgm:EditingContentBinding}">
                </nmgc:NumericTextBox>
            </DataTemplate>
        </xcdg:CellEditor.EditTemplate>
        <xcdg:CellEditor.ActivationGestures>
            <xcdg:TextInputActivationGesture />
        </xcdg:CellEditor.ActivationGestures>
    </xcdg:CellEditor>

    <xcdg:CellEditor x:Key="System.UInt64">
        <xcdg:CellEditor.EditTemplate>
            <DataTemplate>
                <nmgc:NumericTextBox Margin="-2 0" Padding="0" BorderThickness="0"  Background="Transparent"
                                     NumberStyles="Integer"
                                     Tag="{Binding ParentRow, RelativeSource={RelativeSource AncestorType={x:Type xcdg:Cell}}}"
                                     Text="{nmgm:EditingContentBinding}">
                </nmgc:NumericTextBox>
            </DataTemplate>
        </xcdg:CellEditor.EditTemplate>
        <xcdg:CellEditor.ActivationGestures>
            <xcdg:TextInputActivationGesture />
        </xcdg:CellEditor.ActivationGestures>
    </xcdg:CellEditor>

    <xcdg:CellEditor x:Key="System.DateTime">
        <xcdg:CellEditor.EditTemplate>
            <DataTemplate>
                <xctk:DateTimePicker Margin="-2 0" Padding="0" BorderThickness="0" Background="Transparent"
                                     Tag="{Binding ParentRow, RelativeSource={RelativeSource AncestorType={x:Type xcdg:Cell}}}"
                                     PreviewLostKeyboardFocus="DateTimePicker_PreviewLostKeyboardFocus"
                                     PreviewKeyDown="DateTimePicker_PreviewKeyDown"
                                     Value="{nmgm:EditingContentBinding}">
                </xctk:DateTimePicker>
            </DataTemplate>
        </xcdg:CellEditor.EditTemplate>
        <xcdg:CellEditor.ActivationGestures>
            <xcdg:TextInputActivationGesture />
        </xcdg:CellEditor.ActivationGestures>
    </xcdg:CellEditor>

    <xcdg:CellEditor x:Key="System.TimeSpan">
        <xcdg:CellEditor.EditTemplate>
            <DataTemplate>
                <nmgc:TimeSpanUpDown Margin="-2 0" Padding="0" BorderThickness="0" Background="Transparent"
                                     Tag="{Binding ParentRow, RelativeSource={RelativeSource AncestorType={x:Type xcdg:Cell}}}"
                                     InternalValue="{nmgm:EditingContentBinding}">
                </nmgc:TimeSpanUpDown>
            </DataTemplate>
        </xcdg:CellEditor.EditTemplate>
        <xcdg:CellEditor.ActivationGestures>
            <xcdg:TextInputActivationGesture />
        </xcdg:CellEditor.ActivationGestures>
    </xcdg:CellEditor>

    <xcdg:CellEditor x:Key="System.Guid">
        <xcdg:CellEditor.EditTemplate>
            <DataTemplate>
                <nmfc:GuidControl Margin="-2 0" Padding="0" BorderThickness="0" Background="Transparent"
                                  Tag="{Binding ParentRow, RelativeSource={RelativeSource AncestorType={x:Type xcdg:Cell}}}"
                                  Value="{nmgm:EditingContentBinding}">
                </nmfc:GuidControl>
            </DataTemplate>
        </xcdg:CellEditor.EditTemplate>
        <xcdg:CellEditor.ActivationGestures>
            <xcdg:TextInputActivationGesture />
        </xcdg:CellEditor.ActivationGestures>
    </xcdg:CellEditor>

    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

</ResourceDictionary>