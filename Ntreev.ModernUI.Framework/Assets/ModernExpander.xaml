<!--===================================================================================================================
Released under the MIT License.
    
Copyright (c) 2018 Ntreev Soft co., Ltd.

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated 
documentation files (the "Software"), to deal in the Software without restriction, including without limitation the 
rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit 
persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the 
Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR 
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR 
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
====================================================================================================================-->
<ResourceDictionary x:Class="Ntreev.ModernUI.Framework.Assets.ModernExpander"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:nmfc="clr-namespace:Ntreev.ModernUI.Framework.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="TreeView.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type FrameworkElement}" x:Key="animateFadeOut">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(nmfc:ProgressUtility.IsProgressing), RelativeSource={RelativeSource AncestorType={x:Type nmfc:ModernExpander}}}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Name="OpacityAnim">
                        <Storyboard>
                            <DoubleAnimation BeginTime="0:0:0.0" Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="0:0:0.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="OpacityAnim" />
                </DataTrigger.ExitActions>
            </DataTrigger>
            <Trigger Property="Opacity" Value="0">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(nmfc:ProgressUtility.IsProgressing), RelativeSource={RelativeSource AncestorType={x:Type nmfc:ModernExpander}}}" Value="False">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="Opacity" Value="1" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="ModernExpander_Template" TargetType="{x:Type nmfc:ModernExpander}">
        <Border BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" BorderBrush="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition x:Name="ContentRow" Height="0" />
                </Grid.RowDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>

                <Border x:Name="Border" Grid.Row="0" Background="{TemplateBinding Background}" 
                        BorderThickness="0 0 0 1" BorderBrush="{TemplateBinding Background}" MinHeight="25">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ToggleButton Grid.Column="0" Foreground="{DynamicResource WindowBackground}"
                                      OverridesDefaultStyle="True"
                                      Template="{DynamicResource AnimatedExpanderButtonDownTemp}" 
                                      IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ContentPresenter Grid.Column="1" ContentSource="Header" TextElement.Foreground="{DynamicResource WindowBackground}"
                                          TextElement.FontWeight="Bold" TextElement.FontSize="12"
                                          SnapsToDevicePixels="True" VerticalAlignment="Center" 
                                          ContentTemplate="{TemplateBinding HeaderTemplate}">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                </Border>

                <StackPanel Grid.Row="1">
                    <Border x:Name="Content" Grid.Row="1" Padding="1">
                        <Grid>
                            <ContentPresenter x:Name="ContentPresenter" Height="80" />
                        </Grid>
                    </Border>
                </StackPanel>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Setter TargetName="ContentRow" Property="Height" Value="{Binding Height, ElementName=Content}" />
            </Trigger>
            <!--<Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentRow"
                             Storyboard.TargetProperty=
                               "(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                             To="1"
                             Duration="0:0:0.4" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentRow"
                             Storyboard.TargetProperty=
                               "(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                             To="0"
                             Duration="0:0:0.4" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>-->
            <Trigger Property="nmfc:ProgressUtility.IsProgressing" Value="False">
                <Setter TargetName="ContentPresenter" Property="Height" Value="NaN" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type nmfc:ModernExpander}" BasedOn="{StaticResource {x:Type Expander}}">
        <Setter Property="Background" Value="{DynamicResource WindowBorderActive}" />
        <Setter Property="Template" Value="{StaticResource ModernExpander_Template}" />
        <Setter Property="nmfc:ProgressUtility.IsProgressing" Value="False" />
    </Style>

</ResourceDictionary>